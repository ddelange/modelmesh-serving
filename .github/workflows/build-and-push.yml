name: Build and Push

on:
  push:
    branches:
      - 'main'
      - 'release-[0-9].[0-9]+'
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.github/**'
      - '.tekton/**'
    tags:
      - v*
  pull_request:
    branches: [ main, 'release-[0-9].[0-9]+' ]
    paths-ignore: [ '**.md' ]

env:
  IMAGE_NAME: "kserve/modelmesh-controller"
  DEV_IMAGE_NAME: "kserve/modelmesh-controller-develop"

jobs:
# temporarily disable test to save time iterating
#  test:
#    runs-on: ubuntu-latest
#    env:
#      CI: true
#    steps:
#      - uses: actions/checkout@v2
#      - name: Build develop image
#        run: make build.develop
#      - name: Run lint
#        run: ./scripts/develop.sh make fmt
#      - name: Run unit test
#        run: ./scripts/develop.sh make test
  build:
#    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: export docker build args
        run: |
          # see: scripts/build_devimage.sh
          # see: scripts/build_docker.sh
          
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          echo "VERSION=$VERSION"

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          
          echo "IMAGE_TAG=$VERSION"
          echo "IMAGE_TAG=$VERSION" >> $GITHUB_ENV

          # generate dev image tag, see: scripts/build_devimage.sh
          DEV_DEPS="./scripts/build_devimage.sh Dockerfile.develop go.mod go.sum .pre-commit-config.yaml"
          ls ${DEV_DEPS} # TODO: remove this
          DEV_IMG_TAG=$(cat $(ls ${DEV_DEPS}) | ${SHASUM} | head -c 16)
          
          echo "DEV_IMAGE_TAG=$DEV_IMG_TAG"
          echo "DEV_IMAGE_TAG=$DEV_IMG_TAG" >> $GITHUB_ENV

          git_commit_sha="$(git rev-parse HEAD)"
          
          echo "GIT_COMMIT_SHA=$git_commit_sha"
          echo "GIT_COMMIT_SHA=$git_commit_sha" >> $GITHUB_ENV

          DOCKER_TAG="$(git rev-parse --abbrev-ref HEAD)-$(date -u +"%Y%m%dT%H%M%S%Z")"
          echo "DOCKER_TAG=$DOCKER_TAG"
          echo "IMAGE_VERSION=$DOCKER_TAG" >> $GITHUB_ENV

          DEV_IMAGE=${{ env.DEV_IMAGE_NAME }}:$DEV_IMG_TAG
          echo "DEV_IMAGE=$DEV_IMAGE"
          if $(docker manifest inspect $DEV_IMAGE >/dev/null ); then
            echo "DEV_IMAGE_EXISTS=true" >> "$GITHUB_ENV"
          else
            echo "DEV_IMAGE_EXISTS=false" >> "$GITHUB_ENV"
          fi

      # TODO: test before push
      #   https://docs.docker.com/build/ci/github-actions/test-before-push/
      - name: Build and push developer image
        uses: docker/build-push-action@v3
        if: env.DEV_IMAGE_EXISTS == 'false'
        with:
          platforms: linux/amd64,linux/arm64/v8,linux/ppc64le,linux/s390x
          pull: true
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DEV_IMAGE_NAME }}:${{ env.DEV_IMAGE_TAG }}
          file: Dockerfile.develop
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push controller image
        id: build-and-push-controller-image
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64/v8,linux/ppc64le,linux/s390x
          target: runtime
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          build-args: |
            DEV_IMAGE=${{ env.DEV_IMAGE_NAME }}:${{ env.DEV_IMAGE_TAG }}
            IMAGE_VERSION=${{ env.IMAGE_VERSION }}
            COMMIT_SHA=${{ env.GIT_COMMIT_SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
