# Copyright 2021 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###############################################################################
# Create the develop, test, and build environment
###############################################################################
FROM registry.access.redhat.com/ubi8/go-toolset:1.18

# https://docs.docker.com/engine/reference/builder/#automatic-platform-args-in-the-global-scope
# - TARGETPLATFORM - e.g. linux/amd64, linux/arm/v7, windows/amd64
# - TARGETOS       - e.g. linux, windows, darwin
# - TARGETARCH     - e.g. amd64, arm32v7, arm64v8, i386, ppc64le, s390x
ARG TARGETOS=linux
ARG TARGETARCH=amd64

ARG OPENSHIFT_VERSION=4.9
ARG KUSTOMIZE_VERSION=4.5.2
ARG KUBEBUILDER_VERSION=v3.3.0
ARG CONTROLLER_GEN_VERSION=v0.8.0

ENV PATH=/usr/local/go/bin:$PATH:/usr/local/kubebuilder/bin:

USER root
ENV HOME=/root

WORKDIR /workspace

# Install required packages
RUN true \
    && dnf install -y --nodocs \
       python3 \
       python3-pip \
       nodejs \
    && pip3 install pre-commit \
    && dnf clean all \
    && true

# First download and extract older dist of kubebuilder which includes required etcd, kube-apiserver and kubectl binaries
# Then download and overwrite kubebuilder binary with desired/latest version
RUN true \
    && curl -L https://github.com/kubernetes-sigs/kubebuilder/releases/download/v2.3.2/kubebuilder_2.3.2_${TARGETOS}_${TARGETARCH}.tar.gz | tar -xz -C /tmp/ \
    && mv /tmp/kubebuilder_*_${TARGETOS}_${TARGETARCH} /usr/local/kubebuilder \
    && curl -L https://github.com/kubernetes-sigs/kubebuilder/releases/download/${KUBEBUILDER_VERSION}/kubebuilder_${TARGETOS}_${TARGETARCH} -o /usr/local/kubebuilder/bin/kubebuilder \
    && true

# download openshift-cli
RUN true \
    && curl -sSLf --output /tmp/oc_client.tar.gz https://mirror.openshift.com/pub/openshift-v4/${TARGETARCH}/clients/ocp/latest-${OPENSHIFT_VERSION}/openshift-client-${TARGETOS}.tar.gz \
    && tar -xvf /tmp/oc_client.tar.gz -C /tmp \
    && mv /tmp/oc /usr/local/bin \
    && mv /tmp/kubectl /usr/local/bin \
    && chmod a+x /usr/local/bin/oc /usr/local/bin/kubectl \
    && rm -f /tmp/oc_client.tar.gz \
    && true

# download kustomize
RUN true \
    && curl -sSLf --output /tmp/kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${KUSTOMIZE_VERSION}/kustomize_v${KUSTOMIZE_VERSION}_${TARGETOS}_${TARGETARCH}.tar.gz \
    && tar -xvf /tmp/kustomize.tar.gz -C /tmp \
    && mv /tmp/kustomize /usr/local/bin \
    && chmod a+x /usr/local/bin/kustomize \
    && rm -v /tmp/kustomize.tar.gz \
    && true

# Copy the Go Modules manifests
COPY .pre-commit-config.yaml go.mod go.sum ./

# Download and initialize the pre-commit environments before copying the source so they will be cached
RUN true\
    && git init \
    && pre-commit install-hooks \
    && rm -rf .git \
    && true

# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Install controller-gen
RUN true \
    && mkdir /tmp/controller-gen-tmp && cd /tmp/controller-gen-tmp \
    && go mod init tmp \
    && go get sigs.k8s.io/controller-tools/cmd/controller-gen@${CONTROLLER_GEN_VERSION} \
    && rm -rf /tmp/controller-gen-tmp \
    && true

RUN go install github.com/onsi/ginkgo/v2/ginkgo
ENV PATH=/root/go/bin/:$PATH

# the ubi/go-toolset image doesn't define ENTRYPOINT or CMD, but we need it to run 'make develop'
CMD /bin/bash
